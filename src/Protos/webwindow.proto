
// TODO: Review style guidelines

syntax = "proto3";

import "google/protobuf/empty.proto";

option csharp_namespace = "PeakSWC.RemoteableWebView";

package webwindow;

message SendMessageRequest {
    string id = 1;
    string message = 2;
}

message FileMessageRequest {
    string id = 1;
    string path = 2;
}
message IdMessageRequest {
    string id = 1;
}

message CreateWebWindowRequest {
  string id = 1;
  string htmlHostPath = 2;
  string hostname = 3;
}

message WebMessageResponse {
    string response = 1;
    string url = 2;
}

message IdArrayResponse {
    repeated string responses = 1;
}

message FileReadRequest {
    string id = 1;
    string path = 2;
     bytes data = 3;
}
message FileReadResponse {
    string id = 1;
    string path = 2;   
}

message StringRequest {
    string id = 1;
    string request = 2; 
}

message SendSequenceMessageRequest {
    string id = 1;
    uint32 sequence = 2;
    string message = 3; 
    string url = 4;
}

service RemoteWebWindow {
    rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty); 
    rpc Shutdown(IdMessageRequest) returns (google.protobuf.Empty); 
    rpc CreateWebWindow(CreateWebWindowRequest) returns (stream WebMessageResponse);
    rpc FileReader(stream FileReadRequest) returns (stream FileReadResponse); 
    rpc GetIds(google.protobuf.Empty) returns (IdArrayResponse);
}

service BrowserIPC {
    rpc ReceiveMessage(IdMessageRequest) returns (stream StringRequest);
    rpc SendMessage(SendSequenceMessageRequest) returns (google.protobuf.Empty);
}

enum ClientState {
    Connected = 0;
    ShuttingDown = 1;
}

message ClientResponse {
    string id = 1;
    string hostName = 2;
    string url = 3;
    ClientState state = 4;
}

message ClientResponseList {
    repeated ClientResponse clientResponses = 1;
}

service ClientIPC {
    rpc GetClients(google.protobuf.Empty) returns (stream ClientResponseList);
}